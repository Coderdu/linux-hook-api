
/home/sim/view_memory:     file format elf64-x86-64

Disassembly of section .init:

0000000000400720 <_init>:
  400720:	48 83 ec 08          	sub    $0x8,%rsp
  400724:	e8 43 01 00 00       	callq  40086c <call_gmon_start>
  400729:	e8 c2 01 00 00       	callq  4008f0 <frame_dummy>
  40072e:	e8 0d 04 00 00       	callq  400b40 <__do_global_ctors_aux>
  400733:	48 83 c4 08          	add    $0x8,%rsp
  400737:	c3                   	retq   
Disassembly of section .plt:

0000000000400738 <printf@plt-0x10>:
  400738:	ff 35 c2 07 20 00    	pushq  2099138(%rip)        # 600f00 <_GLOBAL_OFFSET_TABLE_+0x8>
  40073e:	ff 25 c4 07 20 00    	jmpq   *2099140(%rip)        # 600f08 <_GLOBAL_OFFSET_TABLE_+0x10>
  400744:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400748 <printf@plt>:
  400748:	ff 25 c2 07 20 00    	jmpq   *2099138(%rip)        # 600f10 <_GLOBAL_OFFSET_TABLE_+0x18>
  40074e:	68 00 00 00 00       	pushq  $0x0
  400753:	e9 e0 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400758 <close@plt>:
  400758:	ff 25 ba 07 20 00    	jmpq   *2099130(%rip)        # 600f18 <_GLOBAL_OFFSET_TABLE_+0x20>
  40075e:	68 01 00 00 00       	pushq  $0x1
  400763:	e9 d0 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400768 <puts@plt>:
  400768:	ff 25 b2 07 20 00    	jmpq   *2099122(%rip)        # 600f20 <_GLOBAL_OFFSET_TABLE_+0x28>
  40076e:	68 02 00 00 00       	pushq  $0x2
  400773:	e9 c0 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400778 <putchar@plt>:
  400778:	ff 25 aa 07 20 00    	jmpq   *2099114(%rip)        # 600f28 <_GLOBAL_OFFSET_TABLE_+0x30>
  40077e:	68 03 00 00 00       	pushq  $0x3
  400783:	e9 b0 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400788 <_ZNSt8ios_base4InitC1Ev@plt>:
  400788:	ff 25 a2 07 20 00    	jmpq   *2099106(%rip)        # 600f30 <_GLOBAL_OFFSET_TABLE_+0x38>
  40078e:	68 04 00 00 00       	pushq  $0x4
  400793:	e9 a0 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400798 <read@plt>:
  400798:	ff 25 9a 07 20 00    	jmpq   *2099098(%rip)        # 600f38 <_GLOBAL_OFFSET_TABLE_+0x40>
  40079e:	68 05 00 00 00       	pushq  $0x5
  4007a3:	e9 90 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007a8 <__libc_start_main@plt>:
  4007a8:	ff 25 92 07 20 00    	jmpq   *2099090(%rip)        # 600f40 <_GLOBAL_OFFSET_TABLE_+0x48>
  4007ae:	68 06 00 00 00       	pushq  $0x6
  4007b3:	e9 80 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007b8 <__cxa_atexit@plt>:
  4007b8:	ff 25 8a 07 20 00    	jmpq   *2099082(%rip)        # 600f48 <_GLOBAL_OFFSET_TABLE_+0x50>
  4007be:	68 07 00 00 00       	pushq  $0x7
  4007c3:	e9 70 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007c8 <getpid@plt>:
  4007c8:	ff 25 82 07 20 00    	jmpq   *2099074(%rip)        # 600f50 <_GLOBAL_OFFSET_TABLE_+0x58>
  4007ce:	68 08 00 00 00       	pushq  $0x8
  4007d3:	e9 60 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007d8 <_ZNSt8ios_base4InitD1Ev@plt>:
  4007d8:	ff 25 7a 07 20 00    	jmpq   *2099066(%rip)        # 600f58 <_GLOBAL_OFFSET_TABLE_+0x60>
  4007de:	68 09 00 00 00       	pushq  $0x9
  4007e3:	e9 50 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007e8 <sprintf@plt>:
  4007e8:	ff 25 72 07 20 00    	jmpq   *2099058(%rip)        # 600f60 <_GLOBAL_OFFSET_TABLE_+0x68>
  4007ee:	68 0a 00 00 00       	pushq  $0xa
  4007f3:	e9 40 ff ff ff       	jmpq   400738 <_init+0x18>

00000000004007f8 <sleep@plt>:
  4007f8:	ff 25 6a 07 20 00    	jmpq   *2099050(%rip)        # 600f68 <_GLOBAL_OFFSET_TABLE_+0x70>
  4007fe:	68 0b 00 00 00       	pushq  $0xb
  400803:	e9 30 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400808 <lseek@plt>:
  400808:	ff 25 62 07 20 00    	jmpq   *2099042(%rip)        # 600f70 <_GLOBAL_OFFSET_TABLE_+0x78>
  40080e:	68 0c 00 00 00       	pushq  $0xc
  400813:	e9 20 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400818 <__gxx_personality_v0@plt>:
  400818:	ff 25 5a 07 20 00    	jmpq   *2099034(%rip)        # 600f78 <_GLOBAL_OFFSET_TABLE_+0x80>
  40081e:	68 0d 00 00 00       	pushq  $0xd
  400823:	e9 10 ff ff ff       	jmpq   400738 <_init+0x18>

0000000000400828 <open@plt>:
  400828:	ff 25 52 07 20 00    	jmpq   *2099026(%rip)        # 600f80 <_GLOBAL_OFFSET_TABLE_+0x88>
  40082e:	68 0e 00 00 00       	pushq  $0xe
  400833:	e9 00 ff ff ff       	jmpq   400738 <_init+0x18>
Disassembly of section .text:

0000000000400840 <_start>:
  400840:	31 ed                	xor    %ebp,%ebp
  400842:	49 89 d1             	mov    %rdx,%r9
  400845:	5e                   	pop    %rsi
  400846:	48 89 e2             	mov    %rsp,%rdx
  400849:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40084d:	50                   	push   %rax
  40084e:	54                   	push   %rsp
  40084f:	49 c7 c0 a0 0a 40 00 	mov    $0x400aa0,%r8
  400856:	48 c7 c1 b0 0a 40 00 	mov    $0x400ab0,%rcx
  40085d:	48 c7 c7 84 09 40 00 	mov    $0x400984,%rdi
  400864:	e8 3f ff ff ff       	callq  4007a8 <__libc_start_main@plt>
  400869:	f4                   	hlt    
  40086a:	90                   	nop    
  40086b:	90                   	nop    

000000000040086c <call_gmon_start>:
  40086c:	48 83 ec 08          	sub    $0x8,%rsp
  400870:	48 8b 05 79 06 20 00 	mov    2098809(%rip),%rax        # 600ef0 <_DYNAMIC+0x1c0>
  400877:	48 85 c0             	test   %rax,%rax
  40087a:	74 02                	je     40087e <call_gmon_start+0x12>
  40087c:	ff d0                	callq  *%rax
  40087e:	48 83 c4 08          	add    $0x8,%rsp
  400882:	c3                   	retq   
  400883:	90                   	nop    
  400884:	90                   	nop    
  400885:	90                   	nop    
  400886:	90                   	nop    
  400887:	90                   	nop    
  400888:	90                   	nop    
  400889:	90                   	nop    
  40088a:	90                   	nop    
  40088b:	90                   	nop    
  40088c:	90                   	nop    
  40088d:	90                   	nop    
  40088e:	90                   	nop    
  40088f:	90                   	nop    

0000000000400890 <__do_global_dtors_aux>:
  400890:	55                   	push   %rbp
  400891:	48 89 e5             	mov    %rsp,%rbp
  400894:	53                   	push   %rbx
  400895:	48 83 ec 08          	sub    $0x8,%rsp
  400899:	80 3d f8 06 20 00 00 	cmpb   $0x0,2098936(%rip)        # 600f98 <completed.6145>
  4008a0:	75 44                	jne    4008e6 <__do_global_dtors_aux+0x56>
  4008a2:	b8 20 0d 60 00       	mov    $0x600d20,%eax
  4008a7:	48 2d 18 0d 60 00    	sub    $0x600d18,%rax
  4008ad:	48 c1 f8 03          	sar    $0x3,%rax
  4008b1:	48 8d 58 ff          	lea    0xffffffffffffffff(%rax),%rbx
  4008b5:	48 8b 05 d4 06 20 00 	mov    2098900(%rip),%rax        # 600f90 <dtor_idx.6147>
  4008bc:	48 39 c3             	cmp    %rax,%rbx
  4008bf:	76 1e                	jbe    4008df <__do_global_dtors_aux+0x4f>
  4008c1:	48 83 c0 01          	add    $0x1,%rax
  4008c5:	48 89 05 c4 06 20 00 	mov    %rax,2098884(%rip)        # 600f90 <dtor_idx.6147>
  4008cc:	ff 14 c5 18 0d 60 00 	callq  *0x600d18(,%rax,8)
  4008d3:	48 8b 05 b6 06 20 00 	mov    2098870(%rip),%rax        # 600f90 <dtor_idx.6147>
  4008da:	48 39 c3             	cmp    %rax,%rbx
  4008dd:	77 e2                	ja     4008c1 <__do_global_dtors_aux+0x31>
  4008df:	c6 05 b2 06 20 00 01 	movb   $0x1,2098866(%rip)        # 600f98 <completed.6145>
  4008e6:	48 83 c4 08          	add    $0x8,%rsp
  4008ea:	5b                   	pop    %rbx
  4008eb:	c9                   	leaveq 
  4008ec:	c3                   	retq   
  4008ed:	0f 1f 00             	nopl   (%rax)

00000000004008f0 <frame_dummy>:
  4008f0:	55                   	push   %rbp
  4008f1:	48 83 3d 2f 04 20 00 	cmpq   $0x0,2098223(%rip)        # 600d28 <__JCR_END__>
  4008f8:	00 
  4008f9:	48 89 e5             	mov    %rsp,%rbp
  4008fc:	74 16                	je     400914 <frame_dummy+0x24>
  4008fe:	b8 00 00 00 00       	mov    $0x0,%eax
  400903:	48 85 c0             	test   %rax,%rax
  400906:	74 0c                	je     400914 <frame_dummy+0x24>
  400908:	bf 28 0d 60 00       	mov    $0x600d28,%edi
  40090d:	49 89 c3             	mov    %rax,%r11
  400910:	c9                   	leaveq 
  400911:	41 ff e3             	jmpq   *%r11
  400914:	c9                   	leaveq 
  400915:	c3                   	retq   
  400916:	90                   	nop    
  400917:	90                   	nop    

0000000000400918 <_Z41__static_initialization_and_destruction_0ii>:
  400918:	55                   	push   %rbp
  400919:	48 89 e5             	mov    %rsp,%rbp
  40091c:	48 83 ec 10          	sub    $0x10,%rsp
  400920:	89 7d fc             	mov    %edi,0xfffffffffffffffc(%rbp)
  400923:	89 75 f8             	mov    %esi,0xfffffffffffffff8(%rbp)
  400926:	83 7d fc 01          	cmpl   $0x1,0xfffffffffffffffc(%rbp)
  40092a:	75 27                	jne    400953 <_Z41__static_initialization_and_destruction_0ii+0x3b>
  40092c:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,0xfffffffffffffff8(%rbp)
  400933:	75 1e                	jne    400953 <_Z41__static_initialization_and_destruction_0ii+0x3b>
  400935:	bf 9c 0f 60 00       	mov    $0x600f9c,%edi
  40093a:	e8 49 fe ff ff       	callq  400788 <_ZNSt8ios_base4InitC1Ev@plt>
  40093f:	ba 90 0b 40 00       	mov    $0x400b90,%edx
  400944:	be 00 00 00 00       	mov    $0x0,%esi
  400949:	bf 6c 09 40 00       	mov    $0x40096c,%edi
  40094e:	e8 65 fe ff ff       	callq  4007b8 <__cxa_atexit@plt>
  400953:	c9                   	leaveq 
  400954:	c3                   	retq   
  400955:	90                   	nop    

0000000000400956 <_GLOBAL__I_main>:
  400956:	55                   	push   %rbp
  400957:	48 89 e5             	mov    %rsp,%rbp
  40095a:	be ff ff 00 00       	mov    $0xffff,%esi
  40095f:	bf 01 00 00 00       	mov    $0x1,%edi
  400964:	e8 af ff ff ff       	callq  400918 <_Z41__static_initialization_and_destruction_0ii>
  400969:	c9                   	leaveq 
  40096a:	c3                   	retq   
  40096b:	90                   	nop    

000000000040096c <__tcf_0>:
  40096c:	55                   	push   %rbp
  40096d:	48 89 e5             	mov    %rsp,%rbp
  400970:	48 83 ec 10          	sub    $0x10,%rsp
  400974:	48 89 7d f8          	mov    %rdi,0xfffffffffffffff8(%rbp)
  400978:	bf 9c 0f 60 00       	mov    $0x600f9c,%edi
  40097d:	e8 56 fe ff ff       	callq  4007d8 <_ZNSt8ios_base4InitD1Ev@plt>
  400982:	c9                   	leaveq 
  400983:	c3                   	retq   

0000000000400984 <main>:
  400984:	55                   	push   %rbp
  400985:	48 89 e5             	mov    %rsp,%rbp
  400988:	48 81 ec b0 3e 00 00 	sub    $0x3eb0,%rsp
  40098f:	e8 34 fe ff ff       	callq  4007c8 <getpid@plt>
  400994:	89 c6                	mov    %eax,%esi
  400996:	bf 98 0b 40 00       	mov    $0x400b98,%edi
  40099b:	b8 00 00 00 00       	mov    $0x0,%eax
  4009a0:	e8 a3 fd ff ff       	callq  400748 <printf@plt>
  4009a5:	e8 1e fe ff ff       	callq  4007c8 <getpid@plt>
  4009aa:	48 8d 7d d0          	lea    0xffffffffffffffd0(%rbp),%rdi
  4009ae:	89 c2                	mov    %eax,%edx
  4009b0:	be a4 0b 40 00       	mov    $0x400ba4,%esi
  4009b5:	b8 00 00 00 00       	mov    $0x0,%eax
  4009ba:	e8 29 fe ff ff       	callq  4007e8 <sprintf@plt>
  4009bf:	48 8d 7d d0          	lea    0xffffffffffffffd0(%rbp),%rdi
  4009c3:	e8 a0 fd ff ff       	callq  400768 <puts@plt>
  4009c8:	48 8d 7d d0          	lea    0xffffffffffffffd0(%rbp),%rdi
  4009cc:	be 00 00 00 00       	mov    $0x0,%esi
  4009d1:	b8 00 00 00 00       	mov    $0x0,%eax
  4009d6:	e8 4d fe ff ff       	callq  400828 <open@plt>
  4009db:	89 45 f8             	mov    %eax,0xfffffffffffffff8(%rbp)
  4009de:	8b 7d f8             	mov    0xfffffffffffffff8(%rbp),%edi
  4009e1:	ba 00 00 00 00       	mov    $0x0,%edx
  4009e6:	be 00 00 40 00       	mov    $0x400000,%esi
  4009eb:	e8 18 fe ff ff       	callq  400808 <lseek@plt>
  4009f0:	48 8d b5 50 c1 ff ff 	lea    0xffffffffffffc150(%rbp),%rsi
  4009f7:	8b 7d f8             	mov    0xfffffffffffffff8(%rbp),%edi
  4009fa:	ba 80 3e 00 00       	mov    $0x3e80,%edx
  4009ff:	e8 94 fd ff ff       	callq  400798 <read@plt>
  400a04:	8b 7d f8             	mov    0xfffffffffffffff8(%rbp),%edi
  400a07:	e8 4c fd ff ff       	callq  400758 <close@plt>
  400a0c:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffffffffffc(%rbp)
  400a13:	eb 5f                	jmp    400a74 <main+0xf0>
  400a15:	83 7d fc 00          	cmpl   $0x0,0xfffffffffffffffc(%rbp)
  400a19:	74 14                	je     400a2f <main+0xab>
  400a1b:	8b 45 fc             	mov    0xfffffffffffffffc(%rbp),%eax
  400a1e:	83 e0 0f             	and    $0xf,%eax
  400a21:	85 c0                	test   %eax,%eax
  400a23:	75 0a                	jne    400a2f <main+0xab>
  400a25:	bf 0a 00 00 00       	mov    $0xa,%edi
  400a2a:	e8 49 fd ff ff       	callq  400778 <putchar@plt>
  400a2f:	8b 45 fc             	mov    0xfffffffffffffffc(%rbp),%eax
  400a32:	83 e0 0f             	and    $0xf,%eax
  400a35:	85 c0                	test   %eax,%eax
  400a37:	75 18                	jne    400a51 <main+0xcd>
  400a39:	8b 75 fc             	mov    0xfffffffffffffffc(%rbp),%esi
  400a3c:	81 c6 00 00 40 00    	add    $0x400000,%esi
  400a42:	bf b1 0b 40 00       	mov    $0x400bb1,%edi
  400a47:	b8 00 00 00 00       	mov    $0x0,%eax
  400a4c:	e8 f7 fc ff ff       	callq  400748 <printf@plt>
  400a51:	8b 45 fc             	mov    0xfffffffffffffffc(%rbp),%eax
  400a54:	48 98                	cltq   
  400a56:	0f b6 84 05 50 c1 ff 	movzbl 0xffffffffffffc150(%rbp,%rax,1),%eax
  400a5d:	ff 
  400a5e:	0f b6 f0             	movzbl %al,%esi
  400a61:	bf ba 0b 40 00       	mov    $0x400bba,%edi
  400a66:	b8 00 00 00 00       	mov    $0x0,%eax
  400a6b:	e8 d8 fc ff ff       	callq  400748 <printf@plt>
  400a70:	83 45 fc 01          	addl   $0x1,0xfffffffffffffffc(%rbp)
  400a74:	81 7d fc 7f 3e 00 00 	cmpl   $0x3e7f,0xfffffffffffffffc(%rbp)
  400a7b:	7e 98                	jle    400a15 <main+0x91>
  400a7d:	bf 0a 00 00 00       	mov    $0xa,%edi
  400a82:	e8 f1 fc ff ff       	callq  400778 <putchar@plt>
  400a87:	bf e8 03 00 00       	mov    $0x3e8,%edi
  400a8c:	e8 67 fd ff ff       	callq  4007f8 <sleep@plt>
  400a91:	b8 00 00 00 00       	mov    $0x0,%eax
  400a96:	c9                   	leaveq 
  400a97:	c3                   	retq   
  400a98:	90                   	nop    
  400a99:	90                   	nop    
  400a9a:	90                   	nop    
  400a9b:	90                   	nop    
  400a9c:	90                   	nop    
  400a9d:	90                   	nop    
  400a9e:	90                   	nop    
  400a9f:	90                   	nop    

0000000000400aa0 <__libc_csu_fini>:
  400aa0:	f3 c3                	repz retq 
  400aa2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400aa9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400ab0 <__libc_csu_init>:
  400ab0:	4c 89 64 24 e0       	mov    %r12,0xffffffffffffffe0(%rsp)
  400ab5:	4c 89 6c 24 e8       	mov    %r13,0xffffffffffffffe8(%rsp)
  400aba:	4c 8d 25 3b 02 20 00 	lea    2097723(%rip),%r12        # 600cfc <__fini_array_end>
  400ac1:	4c 89 74 24 f0       	mov    %r14,0xfffffffffffffff0(%rsp)
  400ac6:	4c 89 7c 24 f8       	mov    %r15,0xfffffffffffffff8(%rsp)
  400acb:	49 89 f6             	mov    %rsi,%r14
  400ace:	48 89 5c 24 d0       	mov    %rbx,0xffffffffffffffd0(%rsp)
  400ad3:	48 89 6c 24 d8       	mov    %rbp,0xffffffffffffffd8(%rsp)
  400ad8:	48 83 ec 38          	sub    $0x38,%rsp
  400adc:	41 89 ff             	mov    %edi,%r15d
  400adf:	49 89 d5             	mov    %rdx,%r13
  400ae2:	e8 39 fc ff ff       	callq  400720 <_init>
  400ae7:	48 8d 05 0e 02 20 00 	lea    2097678(%rip),%rax        # 600cfc <__fini_array_end>
  400aee:	49 29 c4             	sub    %rax,%r12
  400af1:	49 c1 fc 03          	sar    $0x3,%r12
  400af5:	4d 85 e4             	test   %r12,%r12
  400af8:	74 1e                	je     400b18 <__libc_csu_init+0x68>
  400afa:	31 ed                	xor    %ebp,%ebp
  400afc:	48 89 c3             	mov    %rax,%rbx
  400aff:	90                   	nop    
  400b00:	48 83 c5 01          	add    $0x1,%rbp
  400b04:	4c 89 ea             	mov    %r13,%rdx
  400b07:	4c 89 f6             	mov    %r14,%rsi
  400b0a:	44 89 ff             	mov    %r15d,%edi
  400b0d:	ff 13                	callq  *(%rbx)
  400b0f:	48 83 c3 08          	add    $0x8,%rbx
  400b13:	49 39 ec             	cmp    %rbp,%r12
  400b16:	75 e8                	jne    400b00 <__libc_csu_init+0x50>
  400b18:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  400b1d:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400b22:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400b27:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  400b2c:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  400b31:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400b36:	48 83 c4 38          	add    $0x38,%rsp
  400b3a:	c3                   	retq   
  400b3b:	90                   	nop    
  400b3c:	90                   	nop    
  400b3d:	90                   	nop    
  400b3e:	90                   	nop    
  400b3f:	90                   	nop    

0000000000400b40 <__do_global_ctors_aux>:
  400b40:	55                   	push   %rbp
  400b41:	48 89 e5             	mov    %rsp,%rbp
  400b44:	53                   	push   %rbx
  400b45:	bb 08 0d 60 00       	mov    $0x600d08,%ebx
  400b4a:	48 83 ec 08          	sub    $0x8,%rsp
  400b4e:	48 8b 05 b3 01 20 00 	mov    2097587(%rip),%rax        # 600d08 <__CTOR_LIST__+0x8>
  400b55:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400b59:	74 14                	je     400b6f <__do_global_ctors_aux+0x2f>
  400b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400b60:	48 83 eb 08          	sub    $0x8,%rbx
  400b64:	ff d0                	callq  *%rax
  400b66:	48 8b 03             	mov    (%rbx),%rax
  400b69:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400b6d:	75 f1                	jne    400b60 <__do_global_ctors_aux+0x20>
  400b6f:	48 83 c4 08          	add    $0x8,%rsp
  400b73:	5b                   	pop    %rbx
  400b74:	c9                   	leaveq 
  400b75:	c3                   	retq   
  400b76:	90                   	nop    
  400b77:	90                   	nop    
Disassembly of section .fini:

0000000000400b78 <_fini>:
  400b78:	48 83 ec 08          	sub    $0x8,%rsp
  400b7c:	e8 0f fd ff ff       	callq  400890 <__do_global_dtors_aux>
  400b81:	48 83 c4 08          	add    $0x8,%rsp
  400b85:	c3                   	retq   
